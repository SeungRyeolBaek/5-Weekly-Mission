{"mappings":"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","sources":["src/js/justForFun/blackJack.js"],"sourcesContent":["const playbtn = document.querySelector(\".play-button\");\r\nconst playerCardList = document.querySelector(\".player-card-list\");\r\nconst dealerCardList = document.querySelector(\".dealer-card-list\");\r\nconst playerScore = document.querySelector(\".player-score\");\r\nconst dealerScore = document.querySelector(\".dealer-score\");\r\nconst currentBalance = document.querySelector(\".balance\");\r\nconst currentBet = document.querySelector(\".current-bet\");\r\n\r\nconst suits = [\"♠\", \"♥\", \"♦\", \"♣\"];\r\n//const values = [\"10\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\"];\r\nconst values = [\r\n  \"2\",\r\n  \"3\",\r\n  \"4\",\r\n  \"5\",\r\n  \"6\",\r\n  \"7\",\r\n  \"8\",\r\n  \"9\",\r\n  \"10\",\r\n  \"J\",\r\n  \"Q\",\r\n  \"K\",\r\n  \"A\",\r\n];\r\n\r\nfunction createDeck() {\r\n  let numberOfDecks = 6;\r\n  let deck = [];\r\n  for (let i = 0; i < values.length; i++) {\r\n    for (let j = 0; j < suits.length; j++) {\r\n      let weight = parseInt(values[i]);\r\n      if (values[i] == \"J\" || values[i] == \"Q\" || values[i] == \"K\") weight = 10;\r\n      if (values[i] == \"A\") weight = 11;\r\n      var card = { Value: values[i], Suit: suits[j], Weight: weight };\r\n      for (let k = 0; k < numberOfDecks; k++) deck.push(card);\r\n    }\r\n  }\r\n  deck = shuffleDeck(deck);\r\n  alert(\"셔플하겠습니다\");\r\n  return deck;\r\n}\r\n\r\nfunction shuffleDeck(deck) {\r\n  let shuffledDeck = [...deck];\r\n\r\n  for (let i = shuffledDeck.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [shuffledDeck[i], shuffledDeck[j]] = [shuffledDeck[j], shuffledDeck[i]];\r\n  }\r\n\r\n  return shuffledDeck;\r\n}\r\n\r\nlet playing = false;\r\ndocument.querySelector(\".play-button\").addEventListener(\"click\", startGame);\r\ndocument\r\n  .querySelector(\".blackjack-start\")\r\n  .addEventListener(\"click\", startBlackJack);\r\ndocument.getElementById(\"stay\").addEventListener(\"click\", dealerTurn);\r\ndocument.getElementById(\"hit\").addEventListener(\"click\", playerHit);\r\ndocument.querySelector(\"#plus-5\").addEventListener(\"click\", plusBet);\r\ndocument.querySelector(\"#plus-50\").addEventListener(\"click\", plusBet);\r\ndocument.querySelector(\"#plus-500\").addEventListener(\"click\", plusBet);\r\ndocument.querySelector(\"#minus-5\").addEventListener(\"click\", minusBet);\r\ndocument.querySelector(\"#minus-50\").addEventListener(\"click\", minusBet);\r\ndocument.querySelector(\"#minus-500\").addEventListener(\"click\", minusBet);\r\ndocument\r\n  .querySelector(\".restart-button\")\r\n  .addEventListener(\"click\", restartGame);\r\ndocument.querySelector(\"#double\").addEventListener(\"click\", doubleBet);\r\ndocument.querySelector(\"#hogu\").addEventListener(\"click\", begging);\r\nlet deck = [];\r\nlet playerCards = [];\r\nlet dealerCards = [];\r\nfunction startGame() {\r\n  deck = createDeck();\r\n  playbtn.classList.add(\"hidden\");\r\n  playing = true;\r\n  game();\r\n  document.querySelector(\".bet-controller\").classList.toggle(\"hidden\");\r\n}\r\n\r\nfunction game() {\r\n  bet();\r\n}\r\n\r\nfunction bet() {\r\n  document.querySelector(\".blackjack-start\").classList.toggle(\"hidden\");\r\n}\r\n\r\nfunction startBlackJack() {\r\n  document.querySelector(\".rules\").classList.toggle(\"hidden\");\r\n  document.querySelector(\".blackjack-start\").classList.toggle(\"hidden\");\r\n  document.querySelector(\".bet-controller\").classList.toggle(\"hidden\");\r\n  document.querySelector(\".game-controller\").classList.toggle(\"hidden\");\r\n  document.querySelector(\".player-card-display\").classList.toggle(\"hidden\");\r\n  initialCard();\r\n}\r\n\r\nfunction initialCard() {\r\n  document.querySelector(\".dealer-card-display\").classList.toggle(\"hidden\");\r\n  if (deck.length < 50) deck = createDeck();\r\n  hitCard(playerCards, playerCardList, playerScore);\r\n  updateScore(playerScore, playerCardList);\r\n  hitCard(playerCards, playerCardList, playerScore);\r\n  updateScore(playerScore, playerCardList);\r\n  hitCard(dealerCards, dealerCardList, dealerScore);\r\n  updateScore(dealerScore, dealerCardList);\r\n  if (checkBlackJack(playerCardList)) {\r\n    setTimeout(checkResults(true), 500);\r\n  }\r\n}\r\n\r\nfunction renderCard(card, hand) {\r\n  console.log(\"rendercard\");\r\n  hand.appendChild(getCardUI(card));\r\n}\r\n\r\nfunction getCardUI(card) {\r\n  let el = document.createElement(\"div\");\r\n  el.className = \"card\";\r\n  let suit = document.createElement(\"div\");\r\n  suit.textContent = card.Suit;\r\n  el.appendChild(suit);\r\n  let value = document.createElement(\"div\");\r\n  value.textContent = card.Value;\r\n  value.className = \"value\";\r\n  el.appendChild(value);\r\n  let weight = document.createElement(\"div\");\r\n  weight.textContent = card.Weight;\r\n  weight.className = \"weight\";\r\n  weight.classList.add(\"hidden\");\r\n  el.appendChild(weight);\r\n  if (card.Suit === \"♦\" || card.Suit === \"♥\") el.classList.add(\"red-suit\");\r\n  return el;\r\n}\r\n\r\nfunction hitCard(playercards, playerlist, playerScore) {\r\n  let newCard = deck.pop();\r\n  if (parseInt(newCard.Weight) + calculateCardWeight(playerlist) > 21) {\r\n    let foundAceCard;\r\n    cards = playerlist.querySelectorAll(\".card\");\r\n    for (card of cards) {\r\n      if (card.querySelector(\".weight\").textContent == \"11\")\r\n        foundAceCard = card;\r\n    }\r\n    if (foundAceCard) {\r\n      foundAceCard.querySelector(\".weight\").textContent = 1;\r\n    }\r\n    if (!foundAceCard && newCard.Weight == 11) newCard.Weight = 1;\r\n  }\r\n  playercards.push(newCard);\r\n  renderCard(newCard, playerlist);\r\n}\r\n\r\nfunction updateScore(playerScore, cardList) {\r\n  let score = 0;\r\n  score = calculateCardWeight(cardList);\r\n  playerScore.textContent = score;\r\n}\r\n\r\nfunction playerHit() {\r\n  hitCard(playerCards, playerCardList, playerScore);\r\n  updateScore(playerScore, playerCardList);\r\n  if (parseInt(playerScore.textContent) > 21) {\r\n    setTimeout(500, checkResults());\r\n  }\r\n}\r\n\r\nasync function dealerTurn() {\r\n  async function takeTurn() {\r\n    if (\r\n      parseInt(dealerScore.textContent) >= 17 ||\r\n      parseInt(playerScore.textContent) > 21\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    hitCard(dealerCards, dealerCardList, dealerScore);\r\n    updateScore(dealerScore, dealerCardList);\r\n\r\n    await new Promise((resolve) => setTimeout(resolve, 1000));\r\n\r\n    await takeTurn();\r\n  }\r\n\r\n  await takeTurn();\r\n  checkResults();\r\n}\r\nfunction checkResults(isBlackJack = false) {\r\n  document.querySelector(\".game-controller\").classList.toggle(\"hidden\");\r\n  if (isBlackJack) {\r\n    setTimeout(playerBlackJack, 500);\r\n  } else if (parseInt(playerScore.textContent) > 21) {\r\n    setTimeout(dealerWin, 500);\r\n  } else if (\r\n    parseInt(dealerScore.textContent) > 21 ||\r\n    parseInt(dealerScore.textContent) < parseInt(playerScore.textContent)\r\n  ) {\r\n    setTimeout(playerWin, 500);\r\n  } else if (\r\n    parseInt(dealerScore.textContent) === parseInt(playerScore.textContent)\r\n  ) {\r\n    setTimeout(itsAPush, 500);\r\n  } else {\r\n    setTimeout(dealerWin, 500);\r\n  }\r\n  setTimeout(resetGame, 1000);\r\n}\r\n\r\nfunction playerWin() {\r\n  console.log(\"playerwin\");\r\n  let prizeMoney = parseInt(currentBet.textContent);\r\n  let balance = parseInt(currentBalance.textContent);\r\n  balance += prizeMoney * 2;\r\n  currentBalance.textContent = balance;\r\n  alert(\"YOU WIN!\\n운이 좋군요?\");\r\n}\r\n\r\nfunction dealerWin() {\r\n  console.log(\"dealerwin\");\r\n  alert(\"YOU LOSE\\n블랙잭은 '실력게임' 입니다\");\r\n}\r\n\r\nfunction itsAPush() {\r\n  let prizeMoney = parseInt(currentBet.textContent);\r\n  let balance = parseInt(currentBalance.textContent);\r\n  balance += prizeMoney;\r\n  currentBalance.textContent = balance;\r\n  console.log(dealerCards);\r\n  console.log(dealerCardList);\r\n  console.log(playerCards);\r\n  console.log(playerCardList);\r\n  alert(\"PUSH(무승부)\\n놀라셨나요?\");\r\n}\r\n\r\nfunction resetGame() {\r\n  console.log(\"reset Game\");\r\n  document.querySelector(\".player-card-display\").classList.toggle(\"hidden\");\r\n  document.querySelector(\".dealer-card-display\").classList.toggle(\"hidden\");\r\n  document.querySelector(\".restart-button\").classList.toggle(\"hidden\");\r\n  currentBet.textContent = 0;\r\n  playerScore.textContent = 0;\r\n  dealerScore.textContent = 0;\r\n  while (playerCardList.firstChild) {\r\n    playerCardList.removeChild(playerCardList.firstChild);\r\n  }\r\n  while (dealerCardList.firstChild) {\r\n    dealerCardList.removeChild(dealerCardList.firstChild);\r\n  }\r\n  playerCards = [];\r\n  dealerCards = [];\r\n}\r\n\r\nfunction plusBet(event) {\r\n  const button = event.target;\r\n  let balance = parseInt(currentBalance.textContent);\r\n  let plusValue = parseInt(button.textContent.replace(\"+\", \"\"));\r\n  let betValue = parseInt(currentBet.textContent);\r\n  if (balance < plusValue) {\r\n    alert(\"베팅 금액이 부족합니다\\n산와 산와 산와머니~\");\r\n    return;\r\n  }\r\n\r\n  balance -= plusValue;\r\n  betValue += plusValue;\r\n  currentBalance.textContent = balance;\r\n  currentBet.textContent = betValue;\r\n}\r\n\r\nfunction minusBet(event) {\r\n  const button = event.target;\r\n  let balance = parseInt(currentBalance.textContent);\r\n  let minusValue = parseInt(button.textContent);\r\n  let betValue = parseInt(currentBet.textContent);\r\n  if (minusValue + betValue < 0) {\r\n    alert(\"쫄?\");\r\n    return;\r\n  }\r\n  balance -= minusValue;\r\n  betValue += minusValue;\r\n  currentBalance.textContent = balance;\r\n  currentBet.textContent = betValue;\r\n}\r\n\r\nfunction restartGame() {\r\n  document.querySelector(\".bet-controller\").classList.toggle(\"hidden\");\r\n  document.querySelector(\".blackjack-start\").classList.toggle(\"hidden\");\r\n  document.querySelector(\".restart-button\").classList.toggle(\"hidden\");\r\n}\r\n\r\nfunction doubleBet() {\r\n  let betValue = parseInt(currentBet.textContent);\r\n  let balance = parseInt(currentBalance.textContent);\r\n\r\n  if (betValue > balance) {\r\n    alert(\"돈이 부족한데요?\");\r\n    return;\r\n  }\r\n\r\n  balance -= betValue;\r\n  betValue *= 2;\r\n  playerHit();\r\n  currentBet.textContent = betValue;\r\n  currentBalance.textContent = balance;\r\n  dealerTurn();\r\n}\r\n\r\nfunction checkBlackJack(cardList) {\r\n  return calculateCardWeight(cardList) === 21;\r\n}\r\n\r\nfunction playerBlackJack() {\r\n  console.log(\"playerblack\");\r\n  let prizeMoney = parseInt(currentBet.textContent);\r\n  let balance = parseInt(currentBalance.textContent);\r\n  balance += prizeMoney * 2.5;\r\n  currentBalance.textContent = balance;\r\n  alert(\"NICE BLACKJACK...\");\r\n}\r\n\r\nfunction begging() {\r\n  let balance = parseInt(currentBalance.textContent);\r\n  balance += 500;\r\n  currentBalance.textContent = balance;\r\n  alert(\"500 더 드렸습니다\\n도박중독 전문상담 국번없이 1336\");\r\n}\r\n\r\nfunction sleep(ms) {\r\n  const wakeUpTime = Date.now() + ms;\r\n  while (Date.now() < wakeUpTime) {}\r\n}\r\n\r\nfunction calculateCardWeight(hand) {\r\n  let cards = hand.getElementsByClassName(\"card\");\r\n  let totalWeight = 0;\r\n\r\n  for (let i = 0; i < cards.length; i++) {\r\n    let weightElement = cards[i].getElementsByClassName(\"weight\")[0];\r\n    if (weightElement) {\r\n      totalWeight += parseInt(weightElement.textContent);\r\n    }\r\n  }\r\n\r\n  return totalWeight;\r\n}\r\n"],"names":[],"version":3,"file":"folder.977ece3e.js.map","sourceRoot":"/__parcel_source_root/"}